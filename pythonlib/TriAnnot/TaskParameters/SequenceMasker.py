#!/usr/bin/env python

from TriAnnot.TriAnnotTaskParameters import *

class SequenceMasker (TriAnnotTaskParameters):

    def __init__(self):
        pass


    def retrieveTaskParameters(self, xmlElt):
        # Call the retrieveTaskParameters method of the parent class
        errorsList = super(self.__class__, self).retrieveTaskParameters(xmlElt)

        # Initializations
        maskedSequenceName = self.parameters['masked_sequence']

        # Store the name of the sequence that will be generated by this tool
        if maskedSequenceName in TriAnnotTaskParameters.generatedSequencesTaskId:
            errorsList.append("Task #%s wants to create a masked sequence file named <%s> but this sequence file must already be created by a previous task !" % (self.taskId, maskedSequenceName))
        else:
            TriAnnotTaskParameters.generatedSequencesTaskId[maskedSequenceName] = {'taskIdentifier': self.taskId, 'sequenceType': 'masked', 'generatedBy': 'SequenceMasker'}
            self.logger.debug("Sequence <%s> has been added to the list of sequences that will be generated during the pipeline execution" % (maskedSequenceName))

        return errorsList
